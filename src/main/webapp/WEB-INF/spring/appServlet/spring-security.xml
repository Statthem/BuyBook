<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

<b:import resource="database-props.xml"/>
	<http use-expressions="true">
		<csrf disabled="true" />

		<intercept-url pattern="/" access="permitAll()" />
		<intercept-url pattern="/book_catalogue" access="permitAll()" />
		<intercept-url pattern="/login" access="permitAll()" />
		<intercept-url pattern="/logout" access="permitAll()" />
		<intercept-url pattern="/registration" access="permitAll()" />

		<intercept-url pattern="/userInfo"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/addToFavourite"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/addToFavourite/{BookId}"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/adminPage" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/other/**" access="isAuthenticated()" />

		<access-denied-handler error-page="/403" />

		<form-login login-page='/login' login-processing-url="/j_spring_security_check"
			default-target-url="/book_catalogue" always-use-default-target="false"
			authentication-failure-url="/login?error=true" username-parameter="username"
			password-parameter="password" />



		<logout logout-url="/logout" logout-success-url="/logoutSuccessful"
			delete-cookies="JSESSIONID" invalidate-session="true" />

	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select user_email as username,user_password as password,role_id as enabled from users where user_email=?"

				authorities-by-username-query="select users.user_email as username,user_roles.name as role from users
	                                                join user_roles on users.role_id = user_roles.id 
	                                                where users.user_email = ?" />

		</authentication-provider>
	</authentication-manager>

</b:beans>

